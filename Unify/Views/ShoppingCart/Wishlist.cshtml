@* Copyright (C) 2016 Dev Partner LLC. - All Rights Reserved. 
 *
 * This file is part of DevPartner Unify Theme.
 * 
 * DevPartner Unify Theme can not be copied and/or distributed without the express
 * permission of Dev Partner LLC.
 *
 * Written by Kanstantsin Ivinki, June 2016
 * Email: info@dev-partner.biz
 * Website: http://dev-partner.biz
 *@
@model WishlistModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
    //page class
    Html.AppendPageCssClassParts("html-wishlist-page");

    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}


<div class="heading heading-v1 margin-bottom-20">
    <h2 class="title text-center">
        @if (Model.IsEditable)
        {
            @T("Wishlist")
        }
        else
        {
            @String.Format(T("Wishlist.WishlistOf").Text, Model.CustomerFullname)
        }
    </h2>
</div>

<div class="shopping-cart">
    @if (Model.Items.Count > 0)
    {
        if (Model.Warnings.Count > 0)
        {
            <div class="alert alert-danger square-box">
                <div>
                    @for (int i = 0; i < Model.Warnings.Count; i++)
                    {
                        <div>@Model.Warnings[i]</div>
                    }
                </div>
            </div>
        }

        using (Html.BeginRouteForm("Wishlist", FormMethod.Post))
        {
            <div id="cart_items">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                @if (Model.IsEditable)
                                {
                                    <th>
                                        @T("ShoppingCart.Remove")
                                    </th>
                                }
                                @if (Model.DisplayAddToCart)
                                {
                                    <th class="cart">
                                        @T("ShoppingCart.AddToCart")
                                    </th>
                                }
                                @if (Model.ShowSku)
                                {
                                    <th>
                                        @T("ShoppingCart.SKU")
                                    </th>
                                }
                                @if (Model.ShowProductImages)
                                {
                                    <th class="picture"></th>
                                }
                                <th>
                                    @T("ShoppingCart.Product(s)")
                                </th>
                                <th>
                                    @T("ShoppingCart.UnitPrice")
                                </th>
                                <th>
                                    @T("ShoppingCart.Quantity")
                                </th>
                                <th class="end">
                                    @T("ShoppingCart.ItemTotal")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    @if (Model.IsEditable)
                                    {
                                        <td>
                                            <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                                        </td>
                                    }
                                    @if (Model.DisplayAddToCart)
                                    {
                                        <td>
                                            <input type="checkbox" name="addtocart" value="@(item.Id)" />
                                        </td>
                                    }
                                    @if (Model.ShowSku)
                                    {
                                        <td>
                                            @item.Sku
                                        </td>
                                    }
                                    @if (Model.ShowProductImages)
                                    {
                                        <td>
                                            <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                        </td>
                                    }
                                    <td class="product-in-table">
                                        <div class="product-it-in">
                                            <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})" class="product-name">
                                                @item.ProductName
                                            </a><br />
                                        </div>
                                        @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                        {
                                            <div class="attributes">
                                                @Html.Raw(item.AttributeInfo)
                                            </div>
                                        }
                                        @if (!String.IsNullOrEmpty(item.RecurringInfo))
                                        {
                                            <div class="recurring-info">
                                                @Html.Raw(item.RecurringInfo)
                                            </div>
                                        }
                                        @if (!String.IsNullOrEmpty(item.RentalInfo))
                                        {
                                            <div class="rental-info">
                                                @Html.Raw(item.RentalInfo)
                                            </div>
                                        }
                                        @if (Model.IsEditable && item.AllowItemEditing)
                                        {
                                            var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                            editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);
                                            <div class="edit-item">
                                                <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                            </div>
                                        }
                                        @if (item.Warnings.Count > 0)
                                        {
                                            <div class="message-error">
                                                <ul>
                                                    @for (int i = 0; i < item.Warnings.Count; i++)
                                                    {
                                                        <li>@item.Warnings[i]</li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                    </td>
                                    <td>@item.UnitPrice</td>
                                    <td>
                                        @if (Model.IsEditable)
                                        {
                                            if (item.AllowedQuantities.Count > 0)
                                            {
                                                <select name="itemquantity@(item.Id)" class="qty-dropdown">
                                                    @foreach (var qty in item.AllowedQuantities)
                                                    {
                                                        <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                    }
                                                </select>
                                            }
                                            else
                                            {
                                                <button type='button' class="quantity-button" name='subtract' onclick='javascript: subtractQty("itemquantity@(item.Id)");' value='-'>-</button>
                                                <input id="itemquantity@(item.Id)" name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="quantity-field" />
                                                <button type='button' class="quantity-button" name='add' onclick='javascript: document.getElementById("itemquantity@(item.Id)").value++;' value='+'>+</button>
                                            }
                                        }
                                        else
                                        {
                                            <span>@item.Quantity</span>
                                        }
                                    </td>
                                    <td class="shop-red">
                                        <span>@item.SubTotal</span>
                                        @if (!String.IsNullOrEmpty(item.Discount))
                                        {
                                            <div class="discount">
                                                @T("ShoppingCart.ItemYouSave"): @item.Discount
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @if (Model.IsEditable)
                    {
                        <div class="pull-right">
                            @if (Model.IsEditable)
                            {
                                <input type="submit" name="updatecart" value="@T("Wishlist.UpdateCart")" class="btn-u btn-u-sea-shop" />
                            }
                            @if (Model.DisplayAddToCart)
                            {
                                <input type="submit" name="addtocartbutton" value="@T("ShoppingCart.AddToCart")" class="btn-u btn-u-sea-shop" />
                            }
                            @if (Model.IsEditable && Model.EmailWishlistEnabled)
                            {
                                <input type="button" value="@T("Wishlist.EmailAFriend")" class="btn-u btn-u-sea-shop" onclick="setLocation('@Url.RouteUrl("EmailWishlist")')" />
                            }
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <h3 class="title text-center">@T("Wishlist.CartIsEmpty")</h3>
    }

    @if (Model.IsEditable && Model.Items.Count > 0)
            {
        <div class="space15px"><div class="space15px">&nbsp;</div></div>
        <div class="share-info">
            <div class="fieldset">
                <div id="legend">
                    <legend>@T("Wishlist.YourWishlistURL")</legend>
                </div>
            </div>

            @*<p>
                    <span class="share-label">:</span>
                </p>*@
            <p>
                <a href="@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid })" class="share-link">@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid }, "http")</a>
            </p>
        </div>
    }
</div>
