@* Copyright (C) 2016 Dev Partner LLC. - All Rights Reserved. 
 *
 * This file is part of DevPartner Unify Theme.
 * 
 * DevPartner Unify Theme can not be copied and/or distributed without the express
 * permission of Dev Partner LLC.
 *
 * Written by Kanstantsin Ivinki, June 2016
 * Email: info@dev-partner.biz
 * Website: http://dev-partner.biz
 *@
@model CustomerOrderListModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
}
@using Nop.Web.Models.Customer
@using Nop.Web.Models.Order;
@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.Orders })
}

<div class="features_items my-account-page">
    <div class="heading margin-bottom-10">
        <h2 class="title text-center">@T("Account.MyAccount") - @T("Account.CustomerOrders")</h2>
    </div>

    @if (Model.RecurringOrders.Count > 0)
    {
        using (Html.BeginForm())
        {
            <div class="section recurring-payments">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                </div>
                <div id="legend">
                    <legend></legend>
                </div>
                <div id="cart_items">
                    <div class="table-responsive cart_info">
                        <table class="table table-condensed">
                            <thead>
                                <tr class="cart_menu">
                                    <td class="a-center start-date">
                                        @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                    </td>
                                    <td class="a-center cycle-info">
                                        @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                    </td>
                                    <td class="a-center next-payment">
                                        @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                    </td>
                                    <td class="a-center total-cycles">
                                        @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                    </td>
                                    <td class="a-center cycles-remaining">
                                        @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                    </td>
                                    <td class="a-center initial-order">
                                        @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                    </td>
                                    <td class="a-center cancel">
                                        @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                    </td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.RecurringOrders)
                                {
                                    <tr>
                                        <td class="a-center start-date">
                                            @item.StartDate
                                        </td>
                                        <td class="a-center cycle-info">
                                            @item.CycleInfo
                                        </td>
                                        <td class="a-center next-payment">
                                            @item.NextPayment
                                        </td>
                                        <td class="a-center total-cycles">
                                            @item.TotalCycles
                                        </td>
                                        <td class="a-center cycles-remaining">
                                            @item.CyclesRemaining
                                        </td>
                                        <td class="a-center initial-order">
                                            <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderId)</a>
                                        </td>
                                        <td class="a-center cancel">
                                            @if (item.CanCancel)
                                            {
                                                <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="button-2 cancel-recurring-order-button" />
                                            }
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>

                </div>

            </div>
        }
        if (Model.CancelRecurringPaymentErrors.Count > 0)
        {
            <div class="alert alert-danger message-error">
                <ul>
                    @foreach (var error in Model.CancelRecurringPaymentErrors)
                    {
                        <li>@error</li>
                    }
                </ul>
            </div>
        }
    }


    <div class="order-list">
        @if (Model.Orders.Count > 0)
        {
            <div class="row">
                @foreach (var order in Model.Orders)
                {
                    <div class="col-md-6">
                        <div class="panel panel-default margin-bottom-40">
                            <div class="panel-heading">
                                <h3 class="panel-title">@T("Account.CustomerOrders.OrderNumber"): @order.Id</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="list-unstyled">
                                    <li>@T("Account.CustomerOrders.OrderStatus"): @order.OrderStatus</li>
                                    <li>@T("Account.CustomerOrders.OrderDate"): @order.CreatedOn.ToString()</li>
                                    <li>@T("Account.CustomerOrders.OrderTotal"): @order.OrderTotal</li>
                                </ul>
                                @if (order.IsReturnRequestAllowed)
                                {
                                    <input type="button" value="@T("Account.CustomerOrders.ReturnItems")" class="btn-u btn-u-sea-shop return-items-buttonv pull-right" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')" />
                                }
                                <input type="button" value="@T("Account.CustomerOrders.OrderDetails")" class="btn-u btn-u-sea-shop order-details-button" onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            @T("Account.CustomerOrders.NoOrders")
        }
    </div>

</div>
