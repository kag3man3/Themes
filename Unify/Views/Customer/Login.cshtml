@* Copyright (C) 2016 Dev Partner LLC. - All Rights Reserved. 
 *
 * This file is part of DevPartner Unify Theme.
 * 
 * DevPartner Unify Theme can not be copied and/or distributed without the express
 * permission of Dev Partner LLC.
 *
 * Written by Kanstantsin Ivinki, June 2016
 * Email: info@dev-partner.biz
 * Website: http://dev-partner.biz
 *@
@model LoginModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!String.IsNullOrEmpty(this.Context.Request.QueryString["returnUrl"]))
    {
        var webHelper = EngineContext.Current.Resolve<IWebHelper>();
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + HttpUtility.UrlEncode(this.Context.Request.QueryString["returnUrl"]), null);
    }
    <!-- JS Implementing Plugins -->
    Html.AppendScriptParts("~/Themes/Unify/E-Commerce/assets/js/forms/page_login.js");
}

<div class="log-reg-v3">
    <div class="container">
        <div class="margin-bottom-20">
            <h1 class="title text-center">@T("Account.Login.Welcome")</h1>
        </div>
        @Html.Partial("_ExternalAuthentication.AssociateMessage")
        @Html.Partial("_ExternalAuthentication.Errors")
        <div class="row">
            <div class="col-md-6 md-margin-bottom-50">
                @Html.Action("TopicBlock", "Topic", new { systemName = "LoginRegistrationInfo" })
            </div>
                <div class="col-md-6 md-margin-bottom-50">
                    @using (Html.BeginForm())
                    {
 
                        var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);
                        <div class="log-reg-block sky-form">
                            <h2>@T("Account.Login.ReturningCustomer")</h2>

                            @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                            {
                            <p class="message-error">@validationSummary</p>
                            }

                            <section>
                                @if (Model.UsernamesEnabled)
                                {
                                    <label class="input login-input">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                            @Html.TextBoxFor(m => m.Username, new {@class = "form-control", autofocus = "autofocus", placeholder = T("Account.Login.Fields.UserName").Text})
                                            @*@Html.ValidationMessageFor(m => m.Username)*@
                                        </div>
                                    </label>
                                }
                                else
                                {
                                    <label class="input login-input">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                            @Html.TextBoxFor(m => m.Email, new {@class = "form-control", autofocus = "autofocus", placeholder = T("Account.Login.Fields.Email").Text})
                                            @*@Html.ValidationMessageFor(m => m.Email)*@
                                        </div>
                                    </label>
                                }
                            </section>

                            <section>
                                <label class="input login-input no-border-top">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                                        @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = T("Account.Login.Fields.Password").Text})
                                        @*@Html.ValidationMessageFor(m => m.Password)*@
                                    </div>
                                </label>
                            </section>
                            
                            @if (Model.DisplayCaptcha)
                            {
                                <section>
                                    <div class="captcha-box">
                                        @Html.Raw(Html.GenerateCaptcha())
                                    </div>
                                </section>
                            }

                            <div class="row margin-bottom-5">
                                <div class="col-xs-6">
                                    @Html.CheckBoxFor(model => model.RememberMe)
                                    @Html.LabelFor(model => model.RememberMe, new { })
                                    @*<label class="checkbox margin-bottom-20">
                                        <input id="RememberMe" type="checkbox" name="RememberMe" />
                                        <i></i>
                                        @T("Account.Login.Fields.RememberMe")
                                    </label>*@
                                </div>
                                <div class="col-xs-6 text-right">
                                    @Html.RouteLink(T("Account.Login.ForgotPassword").Text, "PasswordRecovery")
                                </div>
                            </div>
                            <input class="btn-u btn-u-sea-shop btn-block margin-bottom-20" type="submit" value="@T("Account.Login.LoginButton")"/>
                        </div>
                    }
                    <div class="log-reg-block sky-form">
                        @if (Model.CheckoutAsGuest)
                        {
                            <h2>@T("Account.Login.CheckoutAsGuestOrRegister")</h2>
                            <p>
                                @Html.Action("TopicBlock", "Topic", new { systemName = "CheckoutAsGuestOrRegister" })
                            </p>
                            <input type="button" class="btn-u btn-u-sea-shop btn-block margin-bottom-20" onclick="location.href = '@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                            <input type="button" class="btn-u btn-u-sea-shop btn-block margin-bottom-20" onclick="location.href = '@registerUrl'" value="@T("Account.Register")" />
                        }
                        else
                        {
                            <h2>@T("Account.Login.NewCustomer")</h2>
                            <p>
                                @T("Account.Login.NewCustomerText")
                            </p>
                            <input type="button" class="btn-u btn-u-sea-shop btn-block margin-bottom-20" onclick="location.href = '@registerUrl'" value="@T("Account.Register")" />
                        }
                    </div>
               	<div class="external-authentication">
                    @Html.Action("ExternalMethods", "ExternalAuthentication")
                </div>
                </div>
            </div>
    </div>
</div>

<script>
    jQuery(document).ready(function () {
        //App.init();
        Login.initLogin();
        //App.initScrollBar();
    });
</script>