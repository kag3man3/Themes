@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }
    //page class
    Html.AppendPageCssClassParts("html-category-page");

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@
@section Breadcrumb
{
    @if (Model.DisplayCategoryBreadcrumb)
    {
        <div class="breadcrumbs-v4">
            <div class="container">
                <h1>@Model.Name</h1>
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <p>Model.Description</p>
                }
                <ul class="breadcrumb-v4-in">
                    <li>
                        <a href="http://dev-partner.biz/" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                    </li>
                    @foreach (var cat in Model.CategoryBreadcrumb)
                    {
                        var isLastCategory = cat.Id == Model.Id;
                        if (isLastCategory)
                        {
                            <li class="active">@cat.Name</li>
                        }
                        else
                        {
                            <li>
                                <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
        @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
    }
}

@Html.Widget("categorydetails_top", Model.Id)

<div class="row margin-bottom-5">
    <div class="col-sm-4 result-category">
        <h2>@Model.Name</h2>
        @*<small class="shop-bg-red badge-results">@Model.Products.Count</small>*@
    </div>
    <div class="col-sm-8">
        <ul class="list-inline clear-both">
            @if (Model.Products.Count > 0)
            {
                @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
            }
            <li class="sort-list-btn">
                @Html.Widget("categorydetails_before_filters", Model.Id)
            </li>
            @*@if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
                {
                    <li class="sort-list-btn">
                        @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
                    </li>
                }
                @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
                {
                    <li class="sort-list-btn">
                        @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
                    </li>
                }*@
        </ul>
    </div>
</div>

@Html.Widget("categorydetails_before_subcategories", Model.Id)
@*subcategories*@
@if (Model.SubCategories.Count > 0)
{
    for (int i = 0; i < Model.SubCategories.Count; i += 3)
    {
        var subCategoriesInRowCount = (i + 3 <= Model.SubCategories.Count) ? 3 : (Model.SubCategories.Count - i - 1);
        var subCategories = Model.SubCategories.ToList().GetRange(i, subCategoriesInRowCount);

        <div class="row margin-bottom-50">
            @foreach (var item in subCategories)
            {
                <div class="col-md-4">
                    <div class="overflow-h">
                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" class="illustration-v3 illustration-img3"
                           style="background-image: url(@item.PictureModel.ImageUrl);">
                            <span class="illustration-bg">
                                <span class="illustration-ads">
                                    <span class="illustration-v3-category">
                                        <span class="product-category">@item.Name</span>
                                    </span>
                                </span>
                            </span>
                        </a>
                    </div>
                </div>
            }
        </div>
    }
}

@Html.Widget("categorydetails_before_featured_products", Model.Id)
@*featured products*@
@if (Model.FeaturedProducts.Count > 0)
            {
    <div class="row margin-bottom-5">
        <h2 class="title text-center">@T("Products.FeaturedProducts")</h2>
        <div class="illustration-v2 margin-bottom-60">
            <div class="customNavigation margin-bottom-25">
                <a class="owl-btn prev rounded-x"><i class="fa fa-angle-left"></i></a>
                <a class="owl-btn next rounded-x"><i class="fa fa-angle-right"></i></a>
            </div>
            <ul class="list-inline owl-slider">
                @foreach (var item in Model.FeaturedProducts)
                {
                    <li class="item">
                        @Html.Partial("_ProductBox", item)
                    </li>
                }
            </ul>
        </div>
    </div>
}
@Html.Widget("categorydetails_after_featured_products", Model.Id)

@Html.Widget("categorydetails_before_product_list", Model.Id)

@if (Model.Products.Count > 0)
            {
    @*<div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">*@
    <div class="filter-results">
        @if (Model.PagingFilteringContext.ViewMode == "list")
        {
            foreach (var product in Model.Products)
            {
                @Html.Partial("_ProductBox_List", product)
            }
        }
        else
        {
            for (var i = 0; i < Model.Products.Count; i += 4)
            {
                var productsInRowCount = (i + 4 <= Model.Products.Count) ? 4 : Model.Products.Count - i;
                var products = Model.Products.ToList().GetRange(i, productsInRowCount);

                <div class="row illustration-v2 margin-bottom-30">
                    @foreach (var product in products)
                        {
                        <div class="col-md-3">
                            @Html.Partial("_ProductBox", product)
                        </div>
                    }
                </div>
            }
        }
    </div>
}

@if (Model.PagingFilteringContext.TotalPages > 1)
            {
    <div class="text-center">
        <ul class="pagination pagination-v2">
            @{
                //viewmode=list&pagesize=3&orderby=10
                var viewMode = Request.Params["viewmode"];
                var pageSize = Request.Params["pagesize"];
                var orderBy = Request.Params["orderby"];
                var urlParamString = string.Concat(
                    !string.IsNullOrEmpty(viewMode) ? string.Format("&viewmode={0}", viewMode) : string.Empty,
                    !string.IsNullOrEmpty(pageSize) ? string.Format("&pagesize={0}", pageSize) : string.Empty,
                    !string.IsNullOrEmpty(orderBy) ? string.Format("&orderby={0}", orderBy) : string.Empty);

                var totalPages = Model.PagingFilteringContext.TotalPages;
                var currentPage = Model.PagingFilteringContext.PageIndex + 1;
                var nextPage = currentPage < totalPages
                    ? string.Format("?pagenumber={0}{1}", (currentPage + 1).ToString(), urlParamString)
                    : "#";
                var previousPage = currentPage > 1
                    ? string.Format("?pagenumber={0}{1}", (currentPage - 1).ToString(), urlParamString)
                    : "#";
            }

            <li><a href="@previousPage"><i class="fa fa-angle-left"></i></a></li>
            @for (int i = 1; i <= totalPages; i++)
                {
                    if (i == currentPage)
                    {
                    <li class="active"><a href="#">@i</a></li>
                }
                else
                {
                    <li><a href="?pagenumber=@i@urlParamString">@i</a></li>
                }
            }
            <li><a href="@nextPage"><i class="fa fa-angle-right"></i></a></li>
        </ul>
    </div>
                }

@Html.Widget("categorydetails_bottom", Model.Id)
