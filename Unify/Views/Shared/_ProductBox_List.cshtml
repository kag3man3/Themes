@* Copyright (C) 2016 Dev Partner LLC. - All Rights Reserved. 
 *
 * This file is part of DevPartner Unify Theme.
 * 
 * DevPartner Unify Theme can not be copied and/or distributed without the express
 * permission of Dev Partner LLC.
 *
 * Written by Kanstantsin Ivinki, June 2016
 * Email: info@dev-partner.biz
 * Website: http://dev-partner.biz
 *@
@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Extensions
@using Nop.Web.Models.Catalog;

@helper Text_Truncate(string input, int length)
{
if (input.Length <= length)
{
        @input
}
else
{
        @input.Substring(0, length)<text>...</text>
}
}

@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

<div class="list-product-description product-description-brd margin-bottom-30 product-item product-box" data-productid="@Model.Id">
    <div class="row">
        <div class="col-sm-4">
            <a href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">
                <img class="img-responsive sm-margin-bottom-20" alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
            </a>
        </div>
        <div class="col-sm-8 product-description">
            <div class="overflow-h margin-bottom-5">
                <ul class="list-inline overflow-h">
                    <li>
                        <h4 class="title-price">
                            <a href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">
                                @Model.Name
                            </a>
                        </h4>
                    </li>
                    @if (Model.MarkAsNew)
                    {
                        <li><span class="gender text-uppercase">@T("PageTitle.NewProducts")</span></li>
                    }
                    <li class="pull-right">
                        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
                        {
                            <ul class="list-inline product-ratings">
                                @{
                                    var selectedRatingStars = 0;

                                    if (Model.ReviewOverviewModel.TotalReviews != 0)
                                    {
                                        selectedRatingStars = Model.ReviewOverviewModel.RatingSum / Model.ReviewOverviewModel.TotalReviews;
                                    }
                                }

                                @for (var i = 0; i < selectedRatingStars; i++)
                                {
                                    <li><i class="rating-selected fa fa-star"></i></li>
                                }
                                @for (var i = selectedRatingStars; i < 5; i++)
                                {
                                    <li><i class="rating fa fa-star"></i></li>
                                }
                            </ul>
                                    }
                    </li>
                </ul>
                <div class="margin-bottom-10">
                    <span class="title-price margin-right-10">@Model.ProductPrice.Price</span>
                    @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                    {
                        <span class="title-price line-through">@Model.ProductPrice.OldPrice</span>
                    }
                </div>
                @if (!string.IsNullOrEmpty(Model.ShortDescription))
                {
                    <p class="margin-bottom-20">@Html.Raw(Model.ShortDescription)</p>
                }
                @if (!Model.ProductPrice.DisableWishlistButton || !Model.ProductPrice.DisableAddToCompareListButton)
                {
                    <ul class="list-inline add-to-wishlist margin-bottom-20">
                        @if (!Model.ProductPrice.DisableWishlistButton)
                        {
                            <li class="wishlist-in">
                                <i class="fa fa-heart"></i>
                                <a data-original-title="@T("ShoppingCart.AddToWishlist")" data-toggle="tooltip" data-placement="left" href="" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;">@T("ShoppingCart.AddToWishlist")</a>
                            </li>
                        }
                        @if (!Model.ProductPrice.DisableAddToCompareListButton)
                        {
                            <li class="compare-in">
                                <i class="fa fa-exchange"></i>
                                <a data-original-title="@T("ShoppingCart.AddToCompareList")" data-toggle="tooltip" data-placement="left" href="" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;">@T("ShoppingCart.AddToCompareList")</a>
                            </li>
                        }
                    </ul>
                }
                @if (!Model.ProductPrice.DisableBuyButton)
                {
                    var addToCartText = T("ShoppingCart.AddToCart").Text;
                    if (Model.ProductPrice.IsRental)
                    {
                        addToCartText = T("ShoppingCart.Rent").Text;
                    }
                    if (Model.ProductPrice.AvailableForPreOrder)
                    {
                        addToCartText = T("ShoppingCart.PreOrder").Text;
                    }
                    <a class="btn-u btn-u-sea-shop" href="" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink'); return false;">@addToCartText</a>
                }
            </div>
        </div>
    </div>
</div>

