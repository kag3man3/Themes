@* Copyright (C) 2016 Dev Partner LLC. - All Rights Reserved. 
 *
 * This file is part of DevPartner Unify Theme.
 * 
 * DevPartner Unify Theme can not be copied and/or distributed without the express
 * permission of Dev Partner LLC.
 *
 * Written by Kanstantsin Ivinki, June 2016
 * Email: info@dev-partner.biz
 * Website: http://dev-partner.biz
 *@
@model NewsItemListModel
@using Nop.Web.Extensions;
@using Nop.Web.Models.News;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.NewsArchive").Text);
    //page class
    Html.AppendPageCssClassParts("html-news-list-page");
}


<div class="blog-post-area">
    <div class="heading  margin-bottom-40">
        <h2>@T("News")    <a href="@Url.RouteUrl("NewsRSS", new { languageId = Model.WorkingLanguageId })" class="margin-orange header-rss" title="@T("News.RSS.Hint")"><i class="fa fa-rss header-rss-icon"></i></a></h2>
    </div>

    @{
        var last = 0;
    }
    <div class="blog-grid">
        @foreach (var item in Model.NewsItems)
            {
                last++;
            <div>
                <h3>
                    <a href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">
                        @item.Title
                    </a>
                </h3>
                <ul class="blog-grid-info">
                    <li><i class="fa fa-clock-o"></i> @item.CreatedOn.ToString("T")</li>
                    <li><i class="fa fa-calendar"></i> @item.CreatedOn.ToString("D")</li>
                </ul>

                <p>@Html.Raw(item.Short)</p>
                <a class="btn-u btn-u-sea-shop" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">@T("News.MoreInfo")</a>
            </div>
            <br />
            if (last != Model.NewsItems.Count)
            {
                <legend></legend>
            }
        }
    </div>


    @if (Model.PagingFilteringContext.TotalPages > 1)
            {
        <div class="text-center">
            <ul class="pagination pagination-v2">
                @{
                    //viewmode=list&pagesize=3&orderby=10
                    var viewMode = Request.Params["viewmode"];
                    var pageSize = Request.Params["pagesize"];
                    var orderBy = Request.Params["orderby"];
                    var urlParamString = string.Concat(
                        !string.IsNullOrEmpty(viewMode) ? string.Format("&viewmode={0}", viewMode) : string.Empty,
                        !string.IsNullOrEmpty(pageSize) ? string.Format("&pagesize={0}", pageSize) : string.Empty,
                        !string.IsNullOrEmpty(orderBy) ? string.Format("&orderby={0}", orderBy) : string.Empty);

                    var totalPages = Model.PagingFilteringContext.TotalPages;
                    var currentPage = Model.PagingFilteringContext.PageIndex + 1;
                    var nextPage = currentPage < totalPages
                        ? string.Format("?pagenumber={0}{1}", (currentPage + 1).ToString(), urlParamString)
                        : "#";
                    var previousPage = currentPage > 1
                        ? string.Format("?pagenumber={0}{1}", (currentPage - 1).ToString(), urlParamString)
                        : "#";
                }

                <li><a href="@previousPage"><i class="fa fa-angle-left"></i></a></li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    if (i == currentPage)
                    {
                        <li class="active"><a href="#">@i</a></li>
                    }
                    else
                    {
                        <li><a href="?pagenumber=@i@urlParamString">@i</a></li>
                    }
                }
                <li><a href="@nextPage"><i class="fa fa-angle-right"></i></a></li>
            </ul>
        </div>
                    }
</div>
